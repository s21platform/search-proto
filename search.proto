syntax = "proto3";

option go_package = "./search";

service SearchService {
  // Метод получения сообществ в поиске
  rpc GetSociety(GetSocietyIn) returns (GetSocietyOut){};
  // Метод получения списка users
  rpc GetUserWithOffset(GetUserWithOffsetIn) returns (GetUserWithOffsetOut){};
}

// Данные запроса собществ
message GetSocietyIn {
  // полное имя сообщества или часть имени, по которому будет осуществлен поиск
  string part_name = 1;
  int64 limit = 2;
  int64 offset = 3;
}

// Объект описывающий сообщество
message Society {
  // Имя сообщества
  string name = 1;
  // Аватарка сообщества
  string avatar_link = 2;
  // Признак публичности сообщества
  bool is_private = 3;
  // Описание сообщества
  string description = 4;
}

// Объект ответа на запрос поиска
message GetSocietyOut {
  // Массив объектов сообществ, удовлетворяющих поску
  repeated Society societies = 1;
  // Общее количество сообществ
  int64 total = 2;
}

// Объект запроса пользователей
message GetUserWithOffsetIn {
  //количество запрашиваемых записей
  int64 limit = 1;
  //offset записей
  int64 offset = 2;
  //nickname пользователя которого ищем
  string nickname = 3;
}

//Объект ответа на запрос пользователей
message GetUserWithOffsetOut {
  //Срез пользователей
  repeated User users = 1;
  //Количество возвращаемых пользователей
  int64 total = 2;
}

//Объект пользователь
message User {
  //Ник пользователя
  string nickname = 1;
  //UUID пользователя
  string uuid = 2;
  //ссылка на последний аватар пользователя
  string avatar_link = 3;
  // имя пользователя
  string name = 4;
  // фамилия пользователя
  string surname = 5;
}